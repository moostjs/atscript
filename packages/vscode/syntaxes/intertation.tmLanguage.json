{
  "fileTypes": ["intertation", "itn"],
  "scopeName": "source.intertation",
  "name": "ITN",
  "patterns": [
    { "include": "#annotation-with-strings" },
    { "include": "#annotations" },
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#keywords" },
    { "include": "#booleans" },
    { "include": "#numbers" },
    { "include": "#operators" },
    { "include": "#punctuation" },
    { "include": "#global-types" },
    { "include": "#property-names" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.intertation",
          "match": "//.*$"
        },

        {
          "name": "comment.block.intertation",
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [
            {
              "match": "\\*\\/",
              "name": "invalid.illegal.stray.end-of-comment.intertation"
            }
          ]
        }
      ]
    },

    "strings": {
      "patterns": [
        {
          "name": "string.quoted.single.intertation",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.intertation"
            }
          ]
        },

        {
          "name": "string.quoted.double.intertation",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.intertation"
            }
          ]
        }
      ]
    },

    "keywords": {
      "patterns": [
        {
          "name": "storage.type.intertation",
          "match": "\\b(?:public|type|interface)\\b"
        },
        {
          "name": "entity.name.type.intertation",
          "match": "(?<=\\b(?:interface|type)\\s+)\\b[A-Za-z_][A-Za-z0-9_]*\\b"
        }
      ]
    },

    "booleans": {
      "patterns": [
        {
          "name": "constant.language.boolean.intertation",
          "match": "\\b(?:true|false)\\b"
        }
      ]
    },

    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.intertation",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },

    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.intertation",
          "match": "[|&=]"
        }
      ]
    },

    "annotations": {
      "patterns": [
        {
          "name": "punctuation.definition.tag",
          "match": "@[A-Za-z0-9_.]+"
        }
      ]
    },

    "annotation-with-strings": {
      "patterns": [
        {
          "name": "punctuation.definition.tag",
          "begin": "(@[A-Za-z0-9_.]+)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag"
            }
          },
          "end": "(?=$|\\n|\\r|;)",
          "patterns": [
            {
              "name": "comment",
              "match": "\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'"
            },
            {
              "name": "storage.type.intertation",
              "match": "\\b\\d+(\\.\\d+)?\\b"
            },
            {
              "name": "punctuation.separator.comma.annotation.intertation",
              "match": ","
            }
          ]
        }
      ]
    },

    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.separator.comma.intertation",
          "match": ","
        },
        {
          "name": "punctuation.terminator.statement.intertation",
          "match": ";"
        },
        {
          "name": "punctuation.separator.key-value.intertation",
          "match": ":"
        },
        {
          "name": "punctuation.section.parens.begin.intertation",
          "match": "\\("
        },
        {
          "name": "punctuation.section.parens.end.intertation",
          "match": "\\)"
        },
        {
          "name": "punctuation.section.braces.begin.intertation",
          "match": "\\{"
        },
        {
          "name": "punctuation.section.braces.end.intertation",
          "match": "\\}"
        },
        {
          "name": "punctuation.section.brackets.begin.intertation",
          "match": "\\["
        },
        {
          "name": "punctuation.section.brackets.end.intertation",
          "match": "\\]"
        }
      ]
    },

    "global-types": {
      "patterns": [
        {
          "name": "support.type.primitive.intertation",
          "match": "\\b(?:number|string|boolean|void|undefined|null|never|any|unknown|bigint|symbol)\\b(?!\\s*:)"
        }
      ]
    },

    "property-names": {
      "patterns": [
        {
          "name": "variable.object.property.required.intertation",
          "match": "\\b([A-Za-z_$][A-Za-z0-9_$]*)\\b(?=\\s*:)"
        },
        {
          "name": "variable.object.property.optional.intertation",
          "match": "\\b([A-Za-z_$][A-Za-z0-9_$]*)\\b(?=\\?\\s*:)"
        }
      ]
    }
  },
  "injectionSelector": "L:source.intertation"
}
