// prettier-ignore-start
/* eslint-disable */
/// <reference path="./multiple-interface.as" />
/**
 * ðŸª„ This file was generated by Atscript
 * Do not edit this file!
 */

import type { TAtscriptTypeObject, TAtscriptTypeComplex, TAtscriptTypeFinal, TAtscriptTypeArray, TMetadataMap, Validator } from "@atscript/typescript"

/**
 * Atscript type **TContactType**
 * @see {@link ./multiple-interface.as:1:6}
 */
declare type TContactType = "phone" | "email"
declare namespace TContactType {
  const __is_anscript_annotated_type: true
  const type: TAtscriptTypeComplex
  const metadata: TMetadataMap<AtscriptMetadata>
  const validator: () => Validator<TContactType>
}

/**
 * Atscript interface **Address**
 * @see {@link ./multiple-interface.as:3:18}
 */
export declare class Address {
  line1: string
  line2: string
  city: string
  state: string
  zip: string
  static __is_anscript_annotated_type: true
  static type: TAtscriptTypeObject<keyof Address>
  static metadata: TMetadataMap<AtscriptMetadata>
  static validator: () => Validator<Address>
}

/**
 * Atscript interface **Contact**
 * @see {@link ./multiple-interface.as:11:11}
 */
declare class Contact {
  type: TContactType
  value: string
  label?: string
  static __is_anscript_annotated_type: true
  static type: TAtscriptTypeObject<keyof Contact>
  static metadata: TMetadataMap<AtscriptMetadata>
  static validator: () => Validator<Contact>
}

/**
 * Atscript interface **User**
 * @see {@link ./multiple-interface.as:17:18}
 */
export declare class User {
  firstName: string
  lastName: string
  address: Address
  contacts: Contact[]
  static __is_anscript_annotated_type: true
  static type: TAtscriptTypeObject<keyof User>
  static metadata: TMetadataMap<AtscriptMetadata>
  static validator: () => Validator<User>
}
// prettier-ignore-end