// prettier-ignore-start
/* eslint-disable */
/**
 * ðŸª„ This file was generated by Anscript from "real-world-1.as".
 * Do not edit this file!
*/
import { defineAnnotatedType, type TAnscriptTypeObject } from '@anscript/typescript/runtime';

class Address {
  line1!: string;
  
  line2?: string;
  
  city!: string;
  
  state!: string;
  
  zip!: string;
  
  static __is_anscript_annotated_type = true;
  
  static type: TAnscriptTypeObject = {
    kind: "object",
    type: Address,
    props: new Map(),
  };
  
  static metadata = {
    label: "Address",
  };
}

//#region Annotations for Address
{ // Address["line1"]
  const $$md_line1 = defineAnnotatedType({
    type: {
      kind: "final",
      designType: "string",
      type: String,
    },
    metadata: {
      label: "Address Line 1",
    },
  });
  Address.type.props.set("line1", $$md_line1);
}{ // Address["line2"]
  const $$md_line2 = defineAnnotatedType({
    type: {
      kind: "final",
      designType: "string",
      type: String,
    },
    metadata: {
      label: "Address Line 2",
    },
  });
  Address.type.props.set("line2", $$md_line2);
}{ // Address["city"]
  const $$md_city = defineAnnotatedType({
    type: {
      kind: "final",
      designType: "string",
      type: String,
    },
    metadata: {
      label: "City",
    },
  });
  Address.type.props.set("city", $$md_city);
}{ // Address["state"]
  const $$md_state = defineAnnotatedType({
    type: {
      kind: "final",
      designType: "string",
      type: String,
    },
    metadata: {
      label: "State",
    },
  });
  Address.type.props.set("state", $$md_state);
}{ // Address["zip"]
  const $$md_zip = defineAnnotatedType({
    type: {
      kind: "final",
      designType: "string",
      type: String,
    },
    metadata: {
      label: "Zip",
    },
  });
  Address.type.props.set("zip", $$md_zip);
}
//#endregion

class Contact {
  name!: string;
  
  type!: "phone" | "email";
  
  value!: string;
  
  static __is_anscript_annotated_type = true;
  
  static type: TAnscriptTypeObject = {
    kind: "object",
    type: Contact,
    props: new Map(),
  };
  
  static metadata = {
    label: "Contact",
  };
}

//#region Annotations for Contact
{ // Contact["name"]
  const $$md_name = defineAnnotatedType({
    type: {
      kind: "final",
      designType: "string",
      type: String,
    },
    metadata: {},
  });
  Contact.type.props.set("name", $$md_name);
}{ // Contact["type"]
  const $$md_type = defineAnnotatedType({
    type: {
      kind: "union",
      items: [
        {
          kind: "final",
          designType: "string",
          type: String,
          value: "phone",
        },
        {
          kind: "final",
          designType: "string",
          type: String,
          value: "email",
        },
      ],
    },
    metadata: {},
  });
  Contact.type.props.set("type", $$md_type);
}{ // Contact["value"]
  const $$md_value = defineAnnotatedType({
    type: {
      kind: "final",
      designType: "string",
      type: String,
    },
    metadata: {},
  });
  Contact.type.props.set("value", $$md_value);
}
//#endregion

export class Entity {
  id!: string;
  
  name!: string;
  
  address!: Address;
  
  contacts!: Contact[];
  
  static __is_anscript_annotated_type = true;
  
  static type: TAnscriptTypeObject = {
    kind: "object",
    type: Entity,
    props: new Map(),
  };
  
  static metadata = {};
}

//#region Annotations for Entity
{ // Entity["id"]
  const $$md_id = defineAnnotatedType({
    type: {
      kind: "final",
      designType: "string",
      type: String,
    },
    metadata: {
      label: "Legal ID",
    },
  });
  Entity.type.props.set("id", $$md_id);
}{ // Entity["name"]
  const $$md_name = defineAnnotatedType({
    type: {
      kind: "final",
      designType: "string",
      type: String,
    },
    metadata: {
      label: "Name",
    },
  });
  Entity.type.props.set("name", $$md_name);
}{ // Entity["address"]
  const $$md_address = defineAnnotatedType({
    type: Address.type,
    metadata: {
      label: "Address",
    },
  });
  Entity.type.props.set("address", $$md_address);
}{ // Entity["contacts"]
  const $$md_contacts = defineAnnotatedType({
    type: {
      kind: "array",
      of: Contact.type,
    },
    metadata: {
      label: "Contacts",
    },
  });
  Entity.type.props.set("contacts", $$md_contacts);
}
//#endregion

// prettier-ignore-end
