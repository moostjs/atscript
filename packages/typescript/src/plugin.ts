import { TAnscriptPlugin } from '@anscript/core'
import { TypeRenderer, JsRenderer } from './codegen'
import path from 'path'
import { wrapProp } from './codegen/utils'

export const tsPlugin: () => TAnscriptPlugin = () => {
  return {
    name: 'typesccript',
    render(doc, format) {
      if (format === 'dts') {
        return [
          {
            fileName: `${doc.name}.d.ts`,
            content: new TypeRenderer(doc).render(),
          },
        ]
      }
      if (format === 'js') {
        return [
          {
            fileName: `${doc.name}.js`,
            content: new JsRenderer(doc).render(),
          },
        ]
      }
    },

    async buildEnd(output, format, repo) {
      if (format === 'dts') {
        // render anscript.d.ts
        const annotations = await repo.getUsedAnnotations()
        console.log(annotations)
        let rendered = [] as string[]
        for (const [key, val] of Object.entries(annotations)) {
          const isArray = val!.isArray
          let typeLine = Array.from(val!.types)
            .map(t => {
              if (typeof t === 'object') {
                return `{ ${Object.entries(t)
                  .map(([k, v]) => `${wrapProp(k)}: ${v}`)
                  .join(', ')} }`
              } else {
                return t
              }
            })
            .join(' | ')
          rendered.push(`${wrapProp(key)}: ${isArray ? '(' : ''}${typeLine}${isArray ? ')[]' : ''}`)
        }
        output.push({
          content:
            '/**\n' +
            ' * ðŸª„ This file was generated by Anscript\n' +
            ' * It is generated based on annotations used in this project\n' +
            ' * Do not edit this file!\n' +
            ' *\n' +
            ' * Use `npx asc -f dts` command to re-generate this file\n' +
            ' */\n' +
            'export {}\n\n' +
            'declare global {\n' +
            '  interface AnscriptMetadata {\n    ' +
            rendered.join('\n    ') +
            '\n  }\n' +
            '}\n',
          fileName: 'anscript.d.ts',
          source: '',
          target: path.join(repo.root, 'anscript.d.ts'),
        })
      }
    },
  } as TAnscriptPlugin
}
